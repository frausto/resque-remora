= Resque Remora

Resque Remora is a plugin for the Resque queueing system (http://github.com/defunkt/resque) that allows you to add information to the payload of each enqueued job. It allows you to attach a hash with whatever information you want to resque jobs when they are enqueued (much like how a remora attaches to a shark... perhaps.), and then to get that information back and process it whenever the job is taken off the queue. Also of note is that the hash is attached directly to the job so it can be viewed in Redis when looking at queued jobs. 

== Usage

When creating your jobs you should extend Resque::Plugins::Remora and implement the methods to generate the attachable hash and to process it afterwords.

For Example:
	
  class Job
    extend Resque::Plugins::Remora

    def attach_remora
      {:time => Time.now.to_i, :cool_information => "information"}
    end

    def process_remora(queue, attachment)
      #do whatever I want with this hash attachment.
      #For example:
      #time_started = attachment['time'].to_i
      #time_in_queue = Time.now - Time.at(time_started)
    end
    
    #rest of your Job class here
  end

=== Remora required methods

<b>attach_remora</b>:: returns the hash that you want to be attached to jobs to retrieve later. Hash is generated every time a job is enqueued and put into Redis.

<b>process_remora</b>:: this is called after the job gets popped off the Redis queue, the arguments it gets are the queue name and the information which is whatever hash was attached to the job from the attach_remora method. Of note is the fact that the hash keys will be strings no matter what you passed them in as.

== Requirements

* resque-remora requires resque ">=" 1.10" and "< 3.0"
* resque-remora may be incompatible with gems that modify resque's push/pop functionality.

== Contributing to resque-remora
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 nolan frausto. See LICENSE.txt for
further details.

